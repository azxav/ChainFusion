// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Provides live risk scores for each supplier, combining financial health, delivery history, news sentiment, and geopolitical indicators.
 *
 * - getSupplierVitalityScore - A function that retrieves the supplier vitality score.
 * - SupplierVitalityScoreInput - The input type for the getSupplierVitalityScore function.
 * - SupplierVitalityScoreOutput - The return type for the getSupplierVitalityScore function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SupplierVitalityScoreInputSchema = z.object({
  supplierName: z.string().describe('The name of the supplier.'),
  financialHealth: z.string().describe('Financial health data of the supplier.'),
  deliveryHistory: z.string().describe('Delivery history data of the supplier.'),
  newsSentiment: z.string().describe('News sentiment data related to the supplier.'),
  geopoliticalIndicators: z.string().describe('Geopolitical indicators relevant to the supplier.'),
});
export type SupplierVitalityScoreInput = z.infer<typeof SupplierVitalityScoreInputSchema>;

const SupplierVitalityScoreOutputSchema = z.object({
  supplierName: z.string().describe('The name of the supplier.'),
  vitalityScore: z.number().describe('A risk score combining financial health, delivery history, news sentiment and geopolitical indicators.'),
  riskAssessment: z.string().describe('A risk assessment based on the vitality score.'),
  recommendations: z.string().describe('Recommendations to mitigate potential supplier-related risks.'),
});
export type SupplierVitalityScoreOutput = z.infer<typeof SupplierVitalityScoreOutputSchema>;

export async function getSupplierVitalityScore(input: SupplierVitalityScoreInput): Promise<SupplierVitalityScoreOutput> {
  return supplierVitalityScoreFlow(input);
}

const prompt = ai.definePrompt({
  name: 'supplierVitalityScorePrompt',
  input: {schema: SupplierVitalityScoreInputSchema},
  output: {schema: SupplierVitalityScoreOutputSchema},
  prompt: `You are a supply chain risk analyst. Analyze the provided data to generate a vitality score, risk assessment, and recommendations for the supplier.

Supplier Name: {{{supplierName}}}
Financial Health: {{{financialHealth}}}
Delivery History: {{{deliveryHistory}}}
News Sentiment: {{{newsSentiment}}}
Geopolitical Indicators: {{{geopoliticalIndicators}}}

Generate a vitality score (0-100, higher is better), a risk assessment, and recommendations to mitigate potential supplier-related risks.
`,
});

const supplierVitalityScoreFlow = ai.defineFlow(
  {
    name: 'supplierVitalityScoreFlow',
    inputSchema: SupplierVitalityScoreInputSchema,
    outputSchema: SupplierVitalityScoreOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
